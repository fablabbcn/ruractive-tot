{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ruractive Train of Trainers","text":"<p>SESSION 0. SESSION 0. Welcome &amp; Kickoff (1)</p> <p>Day 00</p> <ol> <li>:Say Hi!:</li> </ol> <p>SESSION 1. Information and data literacy (1)</p> <p>Day 01</p> <ol> <li></li> </ol> <p>SESSION 2. Digital technologies for rapid prototyping (1)</p> <p>Day 02</p> <ol> <li>Be creative</li> </ol> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul> <p>Made with  from Fablab Barcelona </p>"},{"location":"digitalkit/","title":"Solution template","text":"<p>This is a colaborative repo. We will upload a possible solution, but there are many possibilities. If you want to upload your own solution, please follow this template and you can contact us or do a pull request to upload it to the repo in the correct folder solutions/day#. </p>"},{"location":"digitalkit/#title","title":"Title","text":""},{"location":"digitalkit/#description","title":"Description","text":"<p>Describe in a few lines which is your soution and the idea behind it.</p>"},{"location":"digitalkit/#hardware-optional","title":"Hardware (Optional)","text":"<p>If you have more hardware than the Barduino, explain what did you use and how to connect it to the board.</p>"},{"location":"digitalkit/#arduino-libraries-optional","title":"Arduino Libraries (optional)","text":"<p>You may have used some libraries to make it work, please link them here.</p>"},{"location":"digitalkit/#arduino-code","title":"Arduino code","text":"<pre><code>Paste your code here and commented if you want.\n</code></pre>"},{"location":"digitalkit/#hero-shot","title":"Hero shot","text":"<p>Upload a short video or image of the final result.</p>"},{"location":"digitalkit/#explanation-optional","title":"Explanation (optional)","text":"<p>Explain your code here.</p>"},{"location":"howto/","title":"How to participate","text":"<p>Embark on a dynamic journey with our Adventronics Calendar \u2013 an electrifying twist on the traditional advent calendar! Instead of the usual sweet treats, each of the 24 windows reveals a challenge centered around the Barduino. Every day we will share with you in this page more details of the challenge and a possible solution, but be creative with your own solutions. These challenges encompass coding, design, and entertaining activities that you can seamlessly weave into your December routine. While the first five participants to finish the challenge will earn a coveted Barduino sweatshirt*, the true essence lies in the joy of learning, the thrill of tackling electronics, and the camaraderie of sharing your experiences with fellow participants. </p>"},{"location":"howto/#progress","title":"Progress","text":"<p>To track your progress, share a video or photo in our dedicated Telegram group using the hashtag #AdventronicsDay followed by the day's number (e.g., #AdventronicsDay05). Utilize this group to seek guidance, pose questions, and exchange insights with the vibrant community of participants. Get ready for 24 days of innovation, learning, and festive fun!  </p>"},{"location":"howto/#social-media","title":"Social media","text":"<p>You can share it on social media tagging @fablabbcn and using the hashtag #adventronics and/or #barduino and we will repost so we can have a collection of challenges. </p>"},{"location":"howto/#schedule","title":"Schedule","text":"<p>Every morning the exercise for the day will be explained in this page and an example will be proposed. </p> <p><sup>* If there is less than 5 finishers, the prize will be given to the ones with more challenges done if they completed more than 12.</sup></p>"},{"location":"methodology/","title":"Methodology","text":"<p>Here you can find a bit more info about the Ruractive project.</p>"},{"location":"sessions/00/00/","title":"Day eight:","text":"<p>Challenge!! Who will get the lowest temperature? </p> <p>Use the temperature sensor to win, upload a picture of the temperature printed on Serial and a picture of the situation. It's not allowed to put the Barduino in the fridge... \ud83d\ude1c Give it some time for the temperature to stabilize, it can take up to 15 minutes.</p> <p>Tip, you can power the board with you phone and read the Serial there with an app in Android (I don't know if that's possible with iPhones).</p>"},{"location":"sessions/00/00/#possible-solution","title":"Possible solution!","text":""},{"location":"sessions/00/00/#arduino-code","title":"Arduino code","text":"<pre><code>#include &lt;Temperature_LM75_Derived.h&gt;\n\nTI_TMP102 temperature;\n\nconst int push = 0;\nbool pressed = false;\n\nvoid setup() {\n  pinMode(push, INPUT);\n  Serial.begin(115200);\n  Wire.begin();\n}\n\nvoid loop() {\n  if (!digitalRead(push) &amp;&amp; !pressed) {\n    pressed = true;\n    Serial.print(\"Temperature = \");\n    Serial.print(temperature.readTemperatureC());\n    Serial.println(\" C\");\n  } else if (digitalRead(push)) {\n    pressed = false;\n  }\n}\n</code></pre>"},{"location":"sessions/00/00/#hero-shot","title":"Hero shot","text":""},{"location":"sessions/01/01/","title":"SESSION 1","text":""},{"location":"sessions/01/01/#introduction-to-ruractive-and-the-local-comunity-training","title":"Introduction to Ruractive and the Local Comunity Training","text":"<p>Access code: srW1=j=f</p>"},{"location":"sessions/01/01/#task-1-mapping-your-local-training-ecosystem","title":"Task 1 - Mapping Your Local Training Ecosystem","text":"<p>In the first task, you will connect with your Local Task Force (LTF) and collaboratively, map the communities target groups you may engage with in your local training sessions.  This exercise will help you better understand the local context, identify key stakeholders, and assess the needs of different groups.</p> <p>What to Do: 1. Meet Your Local Task Force (LTF)   - If you are working with a team or organization, schedule a meeting to discuss your shared goals and expertise. 2. Identify Target Groups   - List the communities, organizations, or individuals who could benefit from the training. Consider schhols, NGO's, professional groups, underserved communities or local institutions. 3. Analyze Strengths and Needs  - Briefly outline the specific challenges, needs, and interests of these groups in relation to the training you will provide. 4. Create your own personal webpage. 5. Document the process in your personal webpage.</p> <p></p>"},{"location":"sessions/02/02/","title":"SESSION 2","text":""},{"location":"sessions/02/02/#introduction-to-ruractive-and-the-local-comunity-training","title":"Introduction to Ruractive and the Local Comunity Training","text":"<p>Access code: srW1=j=f</p>"},{"location":"sessions/02/02/#task-1-mapping-your-local-training-ecosystem","title":"Task 1 - Mapping Your Local Training Ecosystem","text":"<p>In the first task, you will connect with your Local Task Force (LTF) and collaboratively, map the communities target groups you may engage with in your local training sessions.  This exercise will help you better understand the local context, identify key stakeholders, and assess the needs of different groups.</p> <p>What to Do: 1. Meet Your Local Task Force (LTF)   - If you are working with a team or organization, schedule a meeting to discuss your shared goals and expertise. 2. Identify Target Groups   - List the communities, organizations, or individuals who could benefit from the training. Consider schhols, NGO's, professional groups, underserved communities or local institutions. 3. Analyze Strengths and Needs  - Briefly outline the specific challenges, needs, and interests of these groups in relation to the training you will provide. 4. Create your own personal webpage. 5. Document the process in your personal webpage.</p> <p></p>"},{"location":"sessions/03/03/","title":"Day three:","text":"<p>Barduino sticker contest!</p> <p>Today we want to test your graphic design skills... </p> <ol> <li>Design a Barduino sticker (it can be related to Adventronics or just the Barduino)</li> <li>Upload your design to the Telegram group</li> <li>Vote for your favourite designs adding a reaction to the message (you can vote for 3 proposals)</li> <li>The poll will be open until Wednesday 6 of December.</li> <li>On Thursday we will announce the winner and all the participants will have one!</li> </ol> <p>Here you can find some SVG's of the Barduino.</p> <p>Good luck!</p> <p><sup>We reserve the right to reject a proposal if we consider it not appropiate.</sup></p>"},{"location":"sessions/03/03/#hero-shot","title":"Hero shot","text":""},{"location":"sessions/04/04/","title":"Day four:","text":"<p>Communicate using morse code using the Barduino.  </p> <p>dot dot dash... Use your resources to encode a message, and try to decode the rest of messages! </p> <p>Here is my solution, using the LED and the buzzer. Try to do it yourself first, and check this one if you don't manage. </p>"},{"location":"sessions/04/04/#possible-solution","title":"Possible solution!","text":""},{"location":"sessions/04/04/#arduino-code","title":"Arduino code","text":"<pre><code>const int led = 48;\nconst int buzzer = 46;\nconst int freq = 800;\n\nconst int wait = 200;  // Duration of a unit\n\nString message = \"Bon dia Pere\";\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  ledcAttachPin(buzzer, 1);\n  //pinMode(buzzer, OUTPUT);\n  Serial.begin(115200);\n  delay(2000); //wait 2 seconds to start transmitting\n\n  for (int i = 0; i &lt; message.length(); i++) {\n    char letter = toLowerCase(message[i]);\n    Serial.print(letter);\n    morse(letter);\n    delay(wait * 2);  // wait 3 units if time after each character (1 in each letter and 2 here)\n\n  }\n}\n\nvoid loop() {\n}\n\nvoid dot() {\n  digitalWrite(led, HIGH);\n  ledcWriteTone(1, freq);\n  delay(wait);\n  digitalWrite(led, LOW);\n  ledcWriteTone(1, 0);\n  delay(wait);  //space between parts of a letter\n}\n\nvoid dash() {\n  digitalWrite(led, HIGH);\n  ledcWriteTone(1, freq);\n  delay(wait * 3);  // A dash are 3 dots\n  digitalWrite(led, LOW);\n  ledcWriteTone(1, 0);\n  delay(wait);  //space between parts of a letter\n}\n\nvoid morse(char letter) {\n  switch (letter) {\n    case 'a':\n      dot();\n      dash();\n      break;\n    case 'b':\n      dash();\n      dot();\n      dot();\n      dot();\n      break;\n    case 'c':\n      dash();\n      dot();\n      dash();\n      dot();\n      break;\n    case 'd':\n      dash();\n      dot();\n      dot();\n      break;\n    case 'e':\n      dot();\n      break;\n    case 'f':\n      dot();\n      dot();\n      dash();\n      dot();\n      break;\n    case 'g':\n      dash();\n      dash();\n      dot();\n      break;\n    case 'h':\n      dot();\n      dot();\n      dot();\n      dot();\n      break;\n    case 'i':\n      dot();\n      dot();\n      break;\n    case 'j':\n      dot();\n      dash();\n      dash();\n      dash();\n      break;\n    case 'k':\n      dash();\n      dot();\n      dash();\n      break;\n    case 'l':\n      dot();\n      dash();\n      dot();\n      dot();\n      break;\n    case 'm':\n      dash();\n      dash();\n      break;\n    case 'n':\n      dash();\n      dot();\n      break;\n    case 'o':\n      dash();\n      dash();\n      dash();\n      break;\n    case 'p':\n      dot();\n      dash();\n      dash();\n      dot();\n      break;\n    case 'q':\n      dash();\n      dash();\n      dot();\n      dash();\n      break;\n    case 'r':\n      dot();\n      dash();\n      dot();\n      break;\n    case 's':\n      dot();\n      dot();\n      dot();\n      break;\n    case 't':\n      dash();\n      break;\n    case 'u':\n      dot();\n      dot();\n      dash();\n      break;\n    case 'v':\n      dot();\n      dot();\n      dot();\n      dash();\n      break;\n    case 'w':\n      dot();\n      dash();\n      dash();\n      break;\n    case 'x':\n      dash();\n      dot();\n      dot();\n      dash();\n      break;\n    case 'y':\n      dash();\n      dot();\n      dash();\n      dash();\n      break;\n    case 'z':\n      dash();\n      dash();\n      dot();\n      dot();\n      break;\n    case '0':\n      dash();\n      dash();\n      dash();\n      dash();\n      dash();\n      break;\n    case '1':\n      dot();\n      dash();\n      dash();\n      dash();\n      dash();\n      break;\n    case '2':\n      dot();\n      dot();\n      dash();\n      dash();\n      dash();\n      break;\n    case '3':\n      dot();\n      dot();\n      dot();\n      dash();\n      dash();\n      break;\n    case '4':\n      dot();\n      dot();\n      dot();\n      dot();\n      dash();\n      break;\n    case '5':\n      dot();\n      dot();\n      dot();\n      dot();\n      dot();\n      break;\n    case '6':\n      dash();\n      dot();\n      dot();\n      dot();\n      dot();\n      break;\n    case '7':\n      dash();\n      dash();\n      dot();\n      dot();\n      dot();\n      break;\n    case '8':\n      dash();\n      dash();\n      dash();\n      dot();\n      dot();\n      break;\n    case '9':\n      dash();\n      dash();\n      dash();\n      dash();\n      dot();\n      break;\n    case ' ':\n      delay(wait * 5);  //wait 7 units of time if there is a space (1 from the last character, 5 here and 1 in the loop)\n    default:\n      break;\n  }\n}\n</code></pre>"},{"location":"sessions/04/04/#hero-shot","title":"Hero shot","text":""},{"location":"sessions/05/05/","title":"Day five:","text":"<p>Play a Christmas carol (or a song you like) using the Barduino.  </p> <p>Time to make some music! Use the buzzer (or any other thing!) to make some music, the idea is to play a Christmas carol. As we come from many different places, try to play one from your hometown, to have a nice collection of tunes  </p> <p>Here is my version of A Betlem m'en vull anar</p>"},{"location":"sessions/05/05/#possible-solution","title":"Possible solution!","text":""},{"location":"sessions/05/05/#arduino-code","title":"Arduino code","text":"<pre><code>#include &lt;Adafruit_NeoPixel.h&gt;\n\nnote_t notes[] = { NOTE_E, NOTE_F, NOTE_G, NOTE_G, NOTE_C, NOTE_A, NOTE_G, NOTE_MAX, NOTE_F, NOTE_E, NOTE_D, NOTE_E, NOTE_F, NOTE_G, NOTE_E, NOTE_C, NOTE_E, NOTE_F, NOTE_G, NOTE_G, NOTE_C, NOTE_A, NOTE_G, NOTE_MAX, NOTE_F, NOTE_E, NOTE_D, NOTE_F, NOTE_E, NOTE_G, NOTE_C };\n//int notes2[] = {E, F, G, G, c, A, G, M, F, E, D, E, F, G, E, C, E, F, G, G, c, A, G, M, F, E, D, F, E, G, C};\nint tempos[] = { 1, 1, 2, 2, 2, 2, 4, 2, 1, 1, 2, 2, 2, 2, 4, 2, 1, 1, 2, 2, 2, 2, 4, 2, 1, 1, 2, 2, 2, 2, 4 };\nint octave[] = { 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 };\n\nconst int buzzer = 14;\nconst int tempo = 130;\n\n#define PIN 38\n#define NUMPIXELS 1\n\nAdafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);\n\nint hue = 0;\nint hueInterval = 65535 / 31;\n\nvoid setup() {\n  ledcAttachPin(buzzer, 1);\n  Serial.begin(115200);\n  for (int i = 0; i &lt; 31; i++) {\n    if (notes[i] != NOTE_MAX) {\n      ledcWriteNote(1, notes[i], octave[i]);\n    } else {\n      ledcWriteTone(1, 0);\n    }\n    pixels.setPixelColor(0, pixels.ColorHSV(hue, 255, 255));\n    pixels.show();\n    hue = hue + hueInterval;\n    delay(tempo * tempos[i]);\n  }\n  ledcWriteTone(1, 0);\n  pixels.setPixelColor(0, pixels.ColorHSV(hue, 0, 0));\n  pixels.show();\n}\n\nvoid loop() {\n}\n</code></pre>"},{"location":"sessions/05/05/#hero-shot","title":"Hero shot","text":""},{"location":"sessions/06/06/","title":"Day six:","text":"<p>Sending Christmas cards it's a classic, you have to make sure you send them on time for Christmas (yes, an email is faster, but in paper is something cute and by email it's just spam... and you know it!). So we wanted to help you, the challenge today it's just to create a Christmas postcard with the Barduino on it!   </p> <p>Extra points if you send them in paper! </p>"},{"location":"sessions/06/06/#hero-shot","title":"Hero shot","text":""},{"location":"sessions/07/07/","title":"Day seven:","text":"<p>Make an instrument with the Barduino.</p> <p>2 days ago you played some preprogrammed tunes, but now it's time to read some inputs and make sounds acording to them! Be creative, you can play with the different inputs...</p> <p>Here is my solution, playing notes with the touch pads reacting to light! I ave to practice a lot more... </p>"},{"location":"sessions/07/07/#possible-solution","title":"Possible solution!","text":""},{"location":"sessions/07/07/#arduino-code","title":"Arduino code","text":"<pre><code>const int buzzer = 14;\nint pressed = 0;\n\nconst int photo = 3;\nconst int threshold = 27000;\n\nunsigned long values[] = {0,0,0,0};\nint playing = 0;\n\nnote_t notes[] = {NOTE_C, NOTE_D, NOTE_E, NOTE_F, NOTE_G, NOTE_A, NOTE_B};\n\nvoid setup() {\n  ledcAttachPin(buzzer, 1);\n  pinMode(photo, INPUT);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  unsigned long max = 0;\n  int max_i;\n  for (int i=0; i&lt;4; i++){\n    values[i] = touchRead(i+4);\n    //Serial.println(values[i]);\n    if (values[i] &gt; max){\n      max = values[i];\n      max_i = i;\n    }\n  }\n  if (max &gt; threshold &amp;&amp; playing != max_i + 4){\n    playing = max_i + 4;\n    int val = map(analogRead(photo), 0, 4095, 0, 35);\n    //int val = 33;\n    Serial.println(val%7);\n    int note = val%7+max_i;\n    int oct = (val/7)+2;\n    if (note &gt; 7){\n      note = note - 7;\n      oct = oct + 1;\n    }\n\n    Serial.print(\"Note: \");\n    Serial.print(note);\n    Serial.print(\"  Oct: \");\n    Serial.println(oct);\n    ledcWriteNote(1, notes[note], oct);\n  }\n  else if (max &lt;= threshold &amp;&amp; playing != 0){\n    Serial.println(\"off\");\n    playing = 0;\n    ledcWriteTone(1, 0);\n  }\n}\n</code></pre>"},{"location":"sessions/07/07/#hero-shot","title":"Hero shot","text":""}]}